<div class="first_run_page">
<button type="button" id="toggle_hints">?</button>
<h3>Engines setup</h3>
<form action="/submit" method="post">

  <legend>System admin</legend>
  <div class="field_group">
    <label>Password</label><br>
    <input id="input_admin_password" name="admin_password" type="password" placeholder="password" autocomplete="off" required pattern=".{6,}" title="Must be at least 6 characters.">
    <input id="input_admin_password_confirmation" name="admin_password_confirmation" type="password" placeholder="re-enter password" autocomplete="off" required>
    <hint>Password for the Engines system administrator 'admin' account.</hint>
  </div>
  <div class="field_group">
    <label>email</label><br>
    <input name="admin_email" type="email" placeholder="email address" required>
    <hint>If you forget the 'admin' password, password reset instructions will be sent to this email address.<br>Optional. Leave blank if you don't want password reset instruction sent.</hint>
  </div>

  <br>
  <legend>Timezone</legend>
  <div class="field_group">
    <select id="select_timezone" name="timezone" required>
      <option value="" disabled selected></option>
      <%= erb :timezone_select_options %>
    </select>
  </div>
  <br>
  <legend>Locale</legend>
  <div class="field_group">
    <label>Country</label><br>
    <select id="select_country" name="country" required>
      <option value="" disabled selected></option>
      <%= erb :country_select_options %>
    </select>
  </div>
  <div class="field_group">
    <label>Language</label><br>
    <select id="select_language" name="language" required>
      <option value="" disabled selected></option>
      <%= erb :language_select_options %>
    </select>
  </div>

  <br>
  <legend>GUI</legend>
  <div class="field_group">
    <hint>The hostname used by the base OS.</hint>
  </div>

  <div class="field_group">
    <label>
      <input name="local_mgmt" type="checkbox" checked></input>
      Install Engines management application
    </label>
    <hint>Most users should install the management GUI. You must manage this system remotely if you don't install the GUI.</hint>
  </div>

  <br>
  <legend>Networking</legend>

  <div class="field_group">
    <label>Hostname</label><br>
    <input name="hostname" type="text" value="<%= @default_hostname %>" required>
    <hint></hint>
  </div>
  <div class="field_group">
    <label>Domain</label><br>
    <label for="input_networking_zeroconf"><input id="input_networking_zeroconf" name="networking" type="radio" value="zeroconf" checked>Zeroconf</label><br>
    <label for="input_networking_self_hosted_dns"><input id="input_networking_self_hosted_dns" name="networking" type="radio" value="self_hosted_dns">Self-hosted DNS</label><br>
    <label for="input_networking_external_dns"><input id="input_networking_external_dns" name="networking" type="radio" value="external_dns">Hosted DNS</label><br>
    <label for="input_networking_dynamic_dns"><input id="input_networking_dynamic_dns" name="networking" type="radio" value="dynamic_dns">Dynamic DNS</label>
    <hint></hint>
  </div>

  <div class="field_group" id="form_domain_name_group" style="display: none;">
    <label>Domain name</label><br>
    <input id="input_domain_name" name="domain_name" type="text">
    <hint></hint>
  </div>

  <div class="field_group" id="form_self_hosted_dns_options_group" style="display: none;">
    <strong>Self-hosted DNS options</strong><br>
    <label for="input_networking_self_dns_local_only">
      <input id="input_networking_self_dns_local_only" name="self_dns_local_only" type="checkbox">Local only</label>
    <hint></hint>
  </div>

  <div class="field_group" id="form_dynamic_dns_options_group" style="display: none;">
    <strong>Dynamic DNS options</strong><br>
    <label>Provider</label><br>
    <select name="dynamic_dns_provider">
      <option></option>
      <option value="dyn-dns">DynDNS dyn.com</option>
      <option value="no-ip">No-IP noip.com</option>
    </select>
    <label>Username</label><br>
    <input id="input_dynamic_dns_username" name="dynamic_dns_username" type="text">
    <label>Password</label><br>
    <input id="input_dynamic_dns_password" name="dynamic_dns_password" type="password">
    <hint></hint>
  </div>

  <br>
  <legend>SSL Certificate</legend>
  <div class="field_group">
    <label>Person</label><br>
    <input name="ssl_person_name" type="text" required>
  </div>
  <div class="field_group">
    <label>Organization</label><br>
    <input name="ssl_organisation_name" type="text" required>
  </div>
  <div class="field_group">
    <label>City</label><br>
    <input name="ssl_city" type="text" required>
  </div>
  <div class="field_group">
    <label>State</label><br>
    <input name="ssl_state" type="text">
  </div>
  <div class="field_group">
    <label>Country</label><br>
    <select name="ssl_country" required>
      <option value="" disabled selected></option>
      <%= erb :country_select_options %>
    </select>
  </div>

  <hr>

  <div class="field_group">
    <input id="form_submit_button" type="submit" value="Submit">
  </div>

</form>
</div>

<script>
// Show networking inputs based on networking type selection
var input_networking_show_zeroconf_fields = function() {
  document.getElementById("form_domain_name_group").style.display = "none";
  document.getElementById("form_self_hosted_dns_options_group").style.display = "none";
  document.getElementById("form_dynamic_dns_options_group").style.display = "none";
  document.getElementById("input_domain_name").required = "";
  document.getElementById("input_dynamic_dns_username").required = "";
  document.getElementById("input_dynamic_dns_password").required = "";
};
var input_networking_show_self_hosted_dns_fields = function() {
  document.getElementById("form_domain_name_group").style.display = "block";
  document.getElementById("form_self_hosted_dns_options_group").style.display = "block";
  document.getElementById("form_dynamic_dns_options_group").style.display = "none";
  document.getElementById("input_domain_name").required = "required";
  document.getElementById("input_dynamic_dns_username").required = "";
  document.getElementById("input_dynamic_dns_password").required = "";
};
var input_networking_show_external_dns_fields = function() {
  document.getElementById("form_domain_name_group").style.display = "block";
  document.getElementById("form_self_hosted_dns_options_group").style.display = "none";
  document.getElementById("form_dynamic_dns_options_group").style.display = "none";
  document.getElementById("input_domain_name").required = "required";
  document.getElementById("input_dynamic_dns_username").required = "";
  document.getElementById("input_dynamic_dns_password").required = "";
};
var input_networking_show_dynamic_dns_fields = function() {
  document.getElementById("form_domain_name_group").style.display = "block";
  document.getElementById("form_self_hosted_dns_options_group").style.display = "none";
  document.getElementById("form_dynamic_dns_options_group").style.display = "block";
  document.getElementById("input_domain_name").required = "required";
  document.getElementById("input_dynamic_dns_username").required = "required";
  document.getElementById("input_dynamic_dns_password").required = "required";
};
document.getElementById("input_networking_zeroconf").addEventListener("click", input_networking_show_zeroconf_fields );
document.getElementById("input_networking_self_hosted_dns").addEventListener("click", input_networking_show_self_hosted_dns_fields );
document.getElementById("input_networking_external_dns").addEventListener("click", input_networking_show_external_dns_fields );
document.getElementById("input_networking_dynamic_dns").addEventListener("click", input_networking_show_dynamic_dns_fields );
// When page loads, display correct networking inputs. This is to allow user to reload page and still maintain correct display of fields.
if ( document.getElementById("input_networking_zeroconf").checked ) { input_networking_show_zeroconf_fields() };
if ( document.getElementById("input_networking_self_hosted_dns").checked ) { input_networking_show_self_hosted_dns_fields() };
if ( document.getElementById("input_networking_external_dns").checked ) { input_networking_show_external_dns_fields() };
if ( document.getElementById("input_networking_dynamic_dns").checked ) { input_networking_show_dynamic_dns_fields() };

// Custom input validation
var validate_passwords_match = function() {
  if ( document.getElementById("input_admin_password_confirmation").value !== '' &&
       document.getElementById("input_admin_password").value !== document.getElementById("input_admin_password_confirmation").value ) {
    document.getElementById("input_admin_password_confirmation").setCustomValidity('Passwords must match.');
  } else {
    document.getElementById("input_admin_password_confirmation").setCustomValidity('');
  };
};
document.getElementById("input_admin_password").addEventListener("change", function() { validate_passwords_match(); });
document.getElementById("input_admin_password_confirmation").addEventListener("change", function() { validate_passwords_match(); });

// Prepopulate locale using client broswer settings
// timezone
var val = Intl.DateTimeFormat().resolvedOptions().timeZone;
var sel = document.getElementById('select_timezone');
var opts = sel.options;
for (var opt, j = 0; opt = opts[j]; j++) {
  if (opt.value == val) {
    sel.selectedIndex = j;
    break;
  }
}
// language
var val = window.navigator.language.split("-")[0];
var sel = document.getElementById('select_language');
var opts = sel.options;
for (var opt, j = 0; opt = opts[j]; j++) {
  if (opt.value == val) {
    sel.selectedIndex = j;
    break;
  }
}
// country
var val = window.navigator.language.split("-")[1];
var sel = document.getElementById('select_country');
var opts = sel.options;
for (var opt, j = 0; opt = opts[j]; j++) {
  if (opt.value == val) {
    sel.selectedIndex = j;
    break;
  }
}

// Show help
var hints_hidden = function() {
  return window.getComputedStyle(document.getElementsByTagName('hint')[0], null).display == 'none';
};
var set_hints_display = function(display_state) {
  var hints = document.getElementsByTagName('hint')
  for (var i = 0; i < hints.length; i++) {
    hints[i].style.display = display_state;
  };
};
document.getElementById("toggle_hints").addEventListener("click", function() {
  if (hints_hidden()) { set_hints_display('block') } else { set_hints_display('none') };
});

</script>
