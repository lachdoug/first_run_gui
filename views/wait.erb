<div id="waiting_message">
  <div class="first_run_page success">
    <h3>Engines setup</h3>
    <h4>Preparing system</h4>
    <p>Please wait...</p>
    <p>Setup is preparing and starting the Engines system. This normally takes a few minutes.</p>
    <p><small>mgmt url: <%= @mgmt_url %><br>local mgmt? <%= @local_mgmt %></small></p>
  </div>
</div>

<div id="starting_system_message" style="display: none;">
  <div class="first_run_page success">
    <% if @local_mgmt %>
      <p>The Engines management GUI is available at:<br> <a href="<%= @mgmt_url %>" target="<%= @mgmt_url %>"><%= @mgmt_url %></a>.</p>
      <p>The Engines system will generate a temporary security certificate. Please accept/trust the certificate when asked to do so. You may upload your own certificate once the Engines system is running.</p>
    <% else %>
      <p>You can manage this Engines system from a terminal, or you can connect it to an Engines management GUI running on another Engines system.</p>
      <p>To connect this sytem to another Engines management GUI, please identify this system using its URL:<br>
        <code><%= @mgmt_url %></code><br>
      </p>
      <p>For terminal access, please login as engines, using <code>sudo su -l engines</code>.</p>
      <p>Depending on your installation, you may need to login as another user first. For example, at AWS:<br>
        <code>ssh -i key ubuntu@ip.address<br>sudo su -l engines</code>
      </p>
      <p>See the
        <a href="http://tiki.prod.engines.org/tiki-index.php?page=Command%20Line"
        target="http://tiki.prod.engines.org/tiki-index.php?page=Command%20Line">
        Engines wiki</a> for more information on using the command line.</p>
    <% end %>
  </div>
</div>


<div id="error_message" style="display: none;">
  <div class="first_run_page error">
    <h3>Engines setup</h3>
    <h4>Error</h4>
    <p>Setup did not complete.</p>
  </div>
</div>

<script>

var main = function() {
  postCloseFirstRun();
};

var ajaxCall = function (type, URL, successFunc, errorFunc) {
  var ajaxRequest = new XMLHttpRequest();
  ajaxRequest.open(type, URL, true);
  ajaxRequest.onreadystatechange = function () {
    if (ajaxRequest.readyState == 4) {
      if (ajaxRequest.status == 200) {
        successFunc();
      } else {
        errorFunc();
      }
    };
  };
  ajaxRequest.send();
};

var postCloseFirstRun = function() {
  ajaxCall('GET',
    '/complete?local_mgmt=<%= @local_mgmt.to_s %>',
    function() {
      waitForMgmtToStart();
    },
    function() {
      waitForMgmtToStart();
    }
    // function() {
    //   setTimeout(function() {
    //     document.getElementById("waiting_message").style.display = 'none';
    //     document.getElementById("error_message").style.display = 'block';
    //   }, 2000);
    // }
  );
};

var waitForMgmtToStart = function() {
  ajaxCall('GET',
    '<%= @mgmt_url %>',
    function() {
      document.getElementById("waiting_message").style.display = 'none';
      document.getElementById("starting_system_message").style.display = 'block';
    },
    function() {
      setTimeout(function() {
        waitForMgmtToStart();
      }, 5000);
    }
  );
};

main();

</script>
