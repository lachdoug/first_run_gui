<div class="first_run_form success">
  <h3>Engines setup</h3>

  <div id="first_run__waiting_message">
    <h4>Preparing system</h4>
    <p>Please wait...</p>
    <p><small>mgmt url <%= @mgmt_url %><br>loacal mgmt: <%= @local_mgmt %></small></p>
  </div>

  <div id="starting_system_message" style="display: none;">
    <h4>Building system</h4>
    <p>The Engines system is building. This normally takes a few minutes.</p>
    <% if @local_mgmt == 'true' %>
      <p>Once the build is complete, the Engines management GUI will be available at:<br> <a href="<%= @mgmt_url %>" target="<%= @mgmt_url %>"><%= @mgmt_url %></a>.</p>
      <p>The Engines system will generate a security certificate. Please accept/trust the certificate when asked to do so. You may upload your own certificate once the Engines system is running.</p>
    <% else %>
      <p>You can manage this Engines system from a terminal, or you can connect it to an Engines management GUI running on another Engines system.</p>
      <p>To connect this sytem to another Engines management GUI, please identify this system using its URL:<br>
        <code><%= @mgmt_url %></code><br>
      </p>
      <p>For terminal access, please login as engines, using <code>sudo su -l engines</code>.</p>
      <p>Depending on your installation, you may need to login as another user first. For example, at AWS:<br>
        <code>ssh -i key ubuntu@ip.address<br>sudo su -l engines</code>
      </p>
      <p>See the
        <a href="http://tiki.prod.engines.org/tiki-index.php?page=Command%20Line"
        target="http://tiki.prod.engines.org/tiki-index.php?page=Command%20Line">
        Engines wiki</a> for more information on using the command line.</p>
    <% end %>
  </div>

</div>

<script>

var main = function() {
  postCloseFirstRun();
};

var ajaxCall = function (type, URL, successFunc, errorFunc) {
  var ajaxRequest = new XMLHttpRequest();
  ajaxRequest.open(type, URL, true);
  ajaxRequest.onreadystatechange = function () {
    if (ajaxRequest.readyState == 4) {
      // if (ajaxRequest.status == 200) {
        successFunc(ajaxRequest);
      // } else {
      //   errorFunc(ajaxRequest);
      // }
    };
  };
  ajaxRequest.send();
};

var postCloseFirstRun = function() {
  ajaxCall('GET',
    '/complete',
    function(ajaxRequest) {
      alert('Successful GET /complete ' + ajaxRequest.status);
      waitForMgmtToStart();
      // setTimeout(function() {
      //   document.getElementById("first_run__waiting_message").style.display = 'none';
      //   document.getElementById("starting_system_message").style.display = 'block';
      // }, 2000);
    },
    function(ajaxRequest) {
      alert('Failed GET /complete ' + ajaxRequest.status);
      waitForMgmtToStart();
      // setTimeout(function() {
      //   alert('Error: failed to complete setup.');
      // }, 2000)
    } );
  };

var waitForMgmtToStart = function() {
  alert('Try GET <%= @mgmt_url %>');
  ajaxCall('GET',
    '<%= @mgmt_url %>',
    function(ajaxRequest) {
      alert('Successful GET <%= @mgmt_url %> ' + ajaxRequest.status);
      document.getElementById("first_run__waiting_message").style.display = 'none';
      document.getElementById("starting_system_message").style.display = 'block';
  }, function() {
  setTimeout(function() {
    alert('Retry after failed GET <%= @mgmt_url %> ' + ajaxRequest.status);
    waitForMgmtToStart();
  }, 2000) });
};

main();

</script>
